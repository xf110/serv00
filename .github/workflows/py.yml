name: Auto Login Panel4

on:
  push:
    branches:
      - main
  workflow_dispatch: # 允许手动触发

jobs:
  login-job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository content
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # 确保使用正确的 Python 版本

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run login script
      env:
        USERNAME: ${{ secrets.USER1 }}  # 使用 GitHub Secrets 存储敏感信息
        PASSWORD: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        python -c "
        import requests
        # 目标URL
        login_url = "https://panel4.serv00.com/login"

        # 登录信息（用户名和密码）
        username = "${{ secrets.USER1 }}"  # 从GitHub Secrets中获取
        password = "${{ secrets.SSH_PRIVATE_KEY }}"  # 从GitHub Secrets中获取

        # 创建一个会话对象
        session = requests.Session()

        # 获取登录页面的csrf token
        response = session.get(login_url)
        soup = BeautifulSoup(response.text, 'html.parser')
        csrf_token = soup.find("input", {"name": "csrf_token"})['value']  # 假设页面有csrf_token

        # 准备表单数据
        payload = {
        "username": username,
        "password": password,
        "csrf_token": csrf_token  # 如果页面有csrf_token
        }

        # 发送POST请求以登录
        login_response = session.post(login_url, data=payload)

        # 检查是否登录成功
        if "Dashboard" in login_response.text:  # 假设登录成功后会跳转到Dashboard页面
        print("Login successful!")
        else:
        print("Login failed.")
        "
